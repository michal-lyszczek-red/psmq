.TH "psmq_enable" "3" "12 June 2019 (v0.1.1)" "bofc.pl"
.SH NAME
.PP
.BR psmq_enable ,\  psmq_disable_threaded
- enable or disable client's ability to receive data.
.SH SYNOPSIS
.PP
.B "#include <psmq.h>"
.PP
.BI "int psmq_enable(struct psmq *" psmq ", int " enable ")"
.br
.BI "int psmq_disable_threaded(struct psmq *" psmq ")"
.SH DESCRIPTION
.PP
By default, after
.I psmq
initialization and subscription to topics, client still cannot receive messages.
Once you have subscribed to all requested topics, you need to call this
function.
Only after that you will be able to receive data with
.BR psmq_receive (3).
.I enable
argument defines whether client wants to enable (1) or disable (0) message
reception.
When client want a break from data, you can sent disable request to broker and
so broker will not sent any more data until you enable it once again.
Disabling or enabling client doesn't lead to any alocations or free on the
broker or client side.
.PP
.B psmq
is single-threaded by design, but you might want to have one thread that will
receive messages and another that controls
.I psmq
object.
In such configuration it is impossible to send disable message and check for
.B ack
from the broker.
It is possible that T1 will block in
.BR psmq_receive (3),
then T2 calls
.BR psmq_enable (3)
with
.I enable
set to 0, and instead of
.BR psmq_enable (3)
.B ack
message will be received by T1 that receives data, and thus
.B ack
will never reach
.BR psmq_enable (3)
which will block and thus causing deadlock.
For such situation,
.BR psmq_disable_threaded (3)
exists.
You can call this instead, but keep in mind, that
.B ack
message with disable confirmation will be received by your listening thread.
You also need to set
.IB psmq ->enabled
to 0 and provided proper synchronization -
.B psmq
doesn't (since it is single threaded by design) do any synchronization.
.SH "RETURN VALUE"
.PP
On success 0 is returned.
On errors -1 with proper errno set is returned.
.SH ERRORS
.TP
.B EINVAL
.I psmq
is
.B NULL
or
.I enable
is neither \'0\' nor \'1\'.
.TP
.B EBADF
.I psmq
has not yet been initialized.
.SH EXAMPLE
.PP
Example is shown in
.BR psmq_receive (3).
.SH "BUG REPORTING"
.PP
Please, report all bugs to "Michał Łyszczek <michal.lyszczek@bofc.pl>"
.SH "SEE ALSO"
.PP
.BR psmqd (1),
.BR psmq-pub (1),
.BR psmq-sub (1),
.BR psmq_cleanup (3),
.BR psmq_disable_threaded (3),
.BR psmq_enable (3),
.BR psmq_init (3),
.BR psmq_publish (3),
.BR psmq_receive (3),
.BR psmq_subscribe (3),
.BR psmq_timedreceive (3),
.BR psmq_timedreceive_ms (3),
.BR psmq_unsubscribe (3),
.BR psmq_building (7),
.BR psmq_overview (7).
